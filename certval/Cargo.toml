[package]
name = "certval"
version = "0.1.3"
description = """
Pure Rust implementation of X.509 Public Key Infrastructure Certificate validation as described in [RFC 5280] and
as augmented by [RFC 5937], including support for certification path building and revocation status determination.
"""
authors = [""]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/carl-wallace/rust-pki"
categories = ["cryptography", "pki", "no-std"]
keywords = ["crypto", "x.509", "OCSP"]
readme = "README.md"
edition = "2021"
rust-version = "1.57"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
x509-cert = { version="0.2.3", default-features = false, features = ["pem"] }
const-oid = { version = "0.9.2", default-features = false, features = ["db"] }
cms = "0.2.1"
der = { version="0.7.6", features = ["alloc", "derive", "flagset", "oid"] }
x509-ocsp = { git = "https://github.com/RustCrypto/formats" }
base64ct = { version="1.6.0", features = ["alloc"], optional=true }
spki = { version = "0.7.2", default-features = false, features = ["alloc"] }
pqckeys = { git = "https://github.com/carl-wallace/pqckeys" }
pem-rfc7468 = { version="0.7.0", features = ["alloc"]}

pkiprocmacros = { path = "../pkiprocmacros"}

ecdsa = {version = "0.16.7", default-features = false, features = ["der"]}
p256 = {version = "0.13.2", default-features = false, features = ["ecdsa", "ecdsa-core"]}
p384 = {version = "0.13.0", default-features = false, features = ["ecdsa"]}
rsa = {version = "0.9.2", default-features = false}
sha-1 = {version = "0.10.1", default-features = false}
sha2 = {version = "0.10.7", default-features = false, features = ["oid"] }

cfg-if = "1.0.0"
# serde feature is added to std, revocation,std and remote
flagset = { version = "0.4.3", package = "flagset", default-features = false }
lazy_static = {version = "1.4.*", features = ["spin_no_std"]}
readonly = "0.2.8"
serde = {version = "1.0.164", default-features = false, features = ["derive", "alloc"]}
subtle-encoding = {version = "0.5.1", default-features = false, features = ["hex", "alloc"]}

ciborium = {version = "0.2.1", default-features = false }
log = {version = "0.4.19", default-features = false}
log4rs = {version = "1.2.0", optional = true, default-features = false}
ndarray = {version = "0.15.6", optional = true, default-features = false}
reqwest = { version = "0.11.18", features = ["blocking"], optional = true}
serde_json = {version = "1.0.97", optional = true, default-features = false, features = ["alloc"] }
tokio = { version = "1.28.2", features = ["full", "time", "rt-multi-thread"], optional = true }
tokio-test = {version = "0.4.2", optional = true}
url = {version = "2.4.0", optional = true}
walkdir = { version = "2.3.3", optional = true}
getrandom = { version = "0.2.10", features = ["js"], optional = true, default-features = false }

# regex documentation notes a std feature that at some point in the future could be omitted
# to enable no_std support, but for now std is required, so mark it optional
regex = {version = "1.8.4", optional = true}

pqcrypto-internals =  {version = "0.2.4", optional = true}
pqcrypto-dilithium =  {version = "0.4.6", optional = true}
pqcrypto-falcon = {version = "0.2.10", optional = true}
pqcrypto-sphincsplus = {version = "0.6.4", optional = true}
pqcrypto = {version = "0.16.1", optional = true}
pqcrypto-traits = {version = "0.3.4", optional = true}

[dev-dependencies]
tempfile = "3.6.0"
hex-literal = "0.4.1"

# There are five feature gates:
#   - no-default-features (i.e., no-std) provides full path validation without file system support, network or thread safety (and no revocation support)
#   - revocation adds support for verifying CRLs and OCSP responses presented to library (presumably obtained via stapling at higher protocol level)
#   - std adds file-based utilities (including graph building) and support for multi-threading (no revocation support)
#   - revocation,std adds revocation support alongside file-based utilities and support for multi-threading
#   - remote adds support for dynamic path building, CRL fetching and OCSP
# Default is set to be the most all encompassing (i.e., remote).
[features]
default = ["remote"]
revocation = ["ndarray"]
std = ["ndarray", "tokio", "tokio-test", "base64ct", "walkdir", "log4rs", "url", "serde_json", "serde/rc",  "flagset/serde", "regex", "lazy_static/spin", "getrandom"]
remote = ["revocation", "std", "reqwest", "lazy_static/spin"]
pqc = ["pqcrypto-internals", "pqcrypto-dilithium", "pqcrypto-falcon", "pqcrypto-sphincsplus", "pqcrypto", "pqcrypto-traits"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
